when:
  - event: [push, pull_request]

steps:
  # Проверка кода
  test:
    image: golang:1.24-alpine
    commands:
      - go mod tidy
      - go vet ./...
      - go test -v ./...
    when:
      - event: [push, pull_request]

  # Сборка Docker образа для GitHub Container Registry
  build-ghcr:
    image: woodpeckerci/plugin-docker-buildx
    privileged: true
    settings:
      registry: ghcr.io
      repo: ghcr.io/${CI_REPO,,}
      dockerfile: Dockerfile
      context: .
      platforms: linux/amd64
      cache_from:
        - 'type=registry\\,ref=ghcr.io/${CI_REPO,,}:buildcache'
      cache_to: "type=registry,ref=ghcr.io/${CI_REPO,,}:buildcache,mode=max"
      username:
        from_secret: registry_username
      password:
        from_secret: registry_token
      auto_tag: true
      labels:
        - org.opencontainers.image.title=Go Registry Garbage Collector
        - org.opencontainers.image.vendor=WebZaytsev
        - org.opencontainers.image.source=${CI_REPO_LINK}
        - org.opencontainers.image.revision=${CI_COMMIT_SHA}
        - org.opencontainers.image.created=${CI_COMMIT_TIMESTAMP}
    when:
      - event: [push]
        branch: [master, main]
      - event: [push]
        branch:
          exclude: [master, main]

  # Публикация в r.zaitsv.dev registry
  publish-zaitsv:
    image: woodpeckerci/plugin-docker-buildx
    privileged: true
    settings:
      registry: r.zaitsv.dev
      repo: r.zaitsv.dev/go-registry-garbage
      dockerfile: Dockerfile
      context: .
      platforms: linux/amd64
      cache_from:
        - 'type=registry\\,ref=ghcr.io/${CI_REPO,,}:buildcache'
      username:
        from_secret: zaitsv_registry_username
      password:
        from_secret: zaitsv_registry_password
      auto_tag: true
      labels:
        - org.opencontainers.image.title=Go Registry Garbage Collector
        - org.opencontainers.image.vendor=WebZaytsev
        - org.opencontainers.image.source=${CI_REPO_LINK}
        - org.opencontainers.image.revision=${CI_COMMIT_SHA}
        - org.opencontainers.image.created=${CI_COMMIT_TIMESTAMP}
    when:
      - event: [push]
        branch: [master, main]




